# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-18.04'

steps:

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: Publish (create)
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: Run Tests
  inputs:
    command: test
    projects: '**/*Test*.csproj'
    publishTestResults: true

#---------------CoverTests------------------------------
- task: DotNetCoreCLI@2  
  displayName: 'Run Unittest'  
  inputs:  
    command: test  
    projects: '**/*Test*.csproj'  
    arguments: '--configuration $(BuildConfiguration) --collect "XPlat Code coverage" -- RunConfiguration.DisableAppDomain=true'  
    testRunTitle: TechnikumDirekt.UnitTests

- script: 'dotnet tool install --global dotnet-reportgenerator-globaltool --version 4.5.8'  
  displayName: 'Install ReportGenerator tool'  

- script: 'reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"'  
  displayName: 'Create reports'

- task: PublishCodeCoverageResults@1  
  displayName: 'Publish code coverage'  
  inputs:  
    codeCoverageTool: Cobertura  
    summaryFileLocation: '$(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml'  
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'TechnikumDirektApi'