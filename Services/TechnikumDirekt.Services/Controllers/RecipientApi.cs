/*
 * Parcel Logistics Service
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using AutoMapper;
using Microsoft.Extensions.Logging;
using TechnikumDirekt.BusinessLogic.Exceptions;
using TechnikumDirekt.BusinessLogic.Interfaces;
using TechnikumDirekt.Services.Attributes;
using TechnikumDirekt.Services.Models;

namespace TechnikumDirekt.Services.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class RecipientApiController : ControllerBase
    {
        private ITrackingLogic _trackingLogic;
        private IMapper _mapper;
        private ILogger _logger;
        public RecipientApiController(ITrackingLogic trackingLogic, IMapper mapper, ILogger<RecipientApiController> logger)
        {
            _trackingLogic = trackingLogic;
            _mapper = mapper;
            _logger = logger;
        }

        /// <summary>
        /// Find the latest state of a parcel by its tracking ID. 
        /// </summary>
        /// <param name="trackingId">The tracking ID of the parcel. E.g. PYJRB4HZ6 </param>
        /// <response code="200">Parcel exists, here&#x27;s the tracking information.</response>
        /// <response code="400">The operation failed due to an error.</response>
        /// <response code="404">Parcel does not exist with this tracking ID.</response>
        [HttpGet]
        [Route("/parcel/{trackingId}")]
        [ValidateModelState]
        [SwaggerOperation("TrackParcel")]
        [SwaggerResponse(statusCode: 200, type: typeof(TrackingInformation), description: "Parcel exists, here&#x27;s the tracking information.")]
        
        public virtual IActionResult TrackParcel([FromRoute][Required][RegularExpression("^[A-Z0-9]{9}$")]string trackingId)
        {
            try
            {
                var tlParcel = _trackingLogic.TrackParcel(trackingId);
                
                var svcTrackingInformation = _mapper.Map<TrackingInformation>(tlParcel);
                
                _logger.LogInformation("Parcel with trackingId: " + trackingId + "exists. Trackinginformation is transmitted.");
                return Ok(svcTrackingInformation); //TODO add Msg to response
            }
            catch (TrackingLogicException e)
            {
                _logger.LogWarning(e.Message);
                return NotFound(StatusCode(404, new Error
                {
                    ErrorMessage = "No hierarchy loaded yet."
                }));
            }
            catch (FluentValidation.ValidationException e)
            {
                _logger.LogWarning(e?.Message + " with Value: " + e.Errors.FirstOrDefault()?.AttemptedValue);
                return BadRequest(StatusCode(400, new Error
                {
                    ErrorMessage = "The operation failed due to an error."
                }));  
            }
            catch (Exception e)
            {
                _logger.LogError(e.Message);
                return BadRequest(StatusCode(400, new Error {ErrorMessage = "The operation failed due to an error."}));
            }
        }
    }
}
